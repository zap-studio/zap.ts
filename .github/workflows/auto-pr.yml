name: Auto PR

on:
  push:
    branches:
      - "feat-**"
      - "feat/**"
      - "feature-**"
      - "feature/**"
      - "fix-**"
      - "fix/**"
      - "bugfix-**"
      - "bugfix/**"
      - "chore-**"
      - "chore/**"
      - "docs-**"
      - "docs/**"
      - "refactor-**"
      - "refactor/**"

permissions:
  contents: read
  pull-requests: write

jobs:
  auto-pr:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v5
        with:
          fetch-depth: 0

      - name: Extract branch metadata
        id: metadata
        run: |
          BRANCH_NAME="${GITHUB_REF#refs/heads/}"
          echo "branch_name=$BRANCH_NAME" >> $GITHUB_OUTPUT
          
          # Extract type from branch name (feat, fix, chore, etc.)
          TYPE=$(echo "$BRANCH_NAME" | sed -E 's/^(feat|feature|fix|bugfix|chore|docs|refactor)[/-].*/\1/')
          
          # Normalize type for label
          case "$TYPE" in
            feature) TYPE="feat" ;;
            bugfix) TYPE="fix" ;;
          esac
          echo "type=$TYPE" >> $GITHUB_OUTPUT
          
          # Get commit info for PR title and body
          TITLE=$(git log -1 --pretty=%s)
          echo "title=$TITLE" >> $GITHUB_OUTPUT
          
          # Build PR body
          {
            echo "body<<EOF"
            echo "## Changes"
            echo ""
            git log --pretty=format:"- %s" origin/main..HEAD
            echo ""
            echo ""
            echo "---"
            echo "*This PR was automatically created from branch \`$BRANCH_NAME\`*"
            echo "EOF"
          } >> $GITHUB_OUTPUT

      - name: Check if PR already exists
        id: check
        env:
          GH_TOKEN: ${{ github.token }}
        run: |
          PR_COUNT=$(gh pr list --head "${{ steps.metadata.outputs.branch_name }}" --json number --jq 'length')
          echo "exists=$([[ $PR_COUNT -gt 0 ]] && echo 'true' || echo 'false')" >> $GITHUB_OUTPUT

      - name: Create draft pull request
        if: steps.check.outputs.exists == 'false'
        env:
          GH_TOKEN: ${{ github.token }}
        run: |
          gh pr create \
            --title "${{ steps.metadata.outputs.title }}" \
            --body "${{ steps.metadata.outputs.body }}" \
            --base main \
            --head "${{ steps.metadata.outputs.branch_name }}" \
            --draft \
            --assignee "${{ github.actor }}" \
            --label "draft,${{ steps.metadata.outputs.type }}"
